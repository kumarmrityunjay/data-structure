void swap(int *xp, int *yp) 
{ 
    int temp = *xp; 
    *xp = *yp; 
    *yp = temp; 
} 

void selectionSort(int arr[], int n) 
{ 
    int i, j, min_idx; 
  
    // One by one move boundary of unsorted subarray 
    for (i = 0; i < n-1; i++) 
    { 
        // Find the minimum element in unsorted array 
        min_idx = i; 
        for (j = i+1; j < n; j++) 
          if (arr[j] < arr[min_idx]) 
            min_idx = j; 
  
        // Swap the found minimum element with the first element 
        swap(&arr[min_idx], &arr[i]); 
    } 
} 
void minimum_time_required(int arr){
    int l=strlen(arr);
    int diff=0;
    for(i=l-1;i>0;i-2){
        arr[i]=arr[i]-diff;
        t1=a[i];
       
        diff=(arr[i]-arr[i-1]);
        if(diff==0){
        t1=arr[i];
        }
        else{
            t2=arr[i];
        }
       
        
        
    }
}
    
    
            
            
          
         
}
int main(void) {
	// your code goes here
	int N;
	int T;
	int i;
	scanf("%d",&T);
	scanf("%d",&N);
	int array[N];
	for(i=0;i<N;i++){
	    scanf("%d",&array[i]);
	}
	
	selectionShort(array,N);
	minimum_time_required(arr,N);
	
	
	
	return 0;
}

